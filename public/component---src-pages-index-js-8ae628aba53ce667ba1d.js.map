{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","render","siteTitle","get","this","siteDescription","posts","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_7__","location","props","react_helmet__WEBPACK_IMPORTED_MODULE_5___default","htmlAttributes","lang","meta","name","content","title","_components_Bio__WEBPACK_IMPORTED_MODULE_6__","className","card__container","style","marginTop","rhythm","marginBottom","map","_ref","node","fields","slug","tag","excerpt","_node$frontmatter","frontmatter","date","author","_components_Card__WEBPACK_IMPORTED_MODULE_9__","key","React","Component","pageQuery"],"mappings":"6QAYMA,4FACJC,kBACE,IAAMC,EAAYC,IAAIC,KAAM,sCACtBC,EAAkBF,IACtBC,KACA,4CAEIE,EAAQH,IAAIC,KAAM,sCAExB,OACEG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUP,KAAKQ,MAAMD,UAC3BJ,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CACEM,eAAgB,CAAEC,KAAM,MACxBC,KAAM,CAAC,CAAEC,KAAM,cAAeC,QAASb,IACvCc,MAAOjB,IAETK,EAAAC,EAAAC,cAACW,EAAA,EAAD,MACAb,EAAAC,EAAAC,cAAA,OAAKY,UAAWC,kBAAiBC,MAAO,CAACC,UAAWC,YAAO,GAAIC,aAAcD,YAAO,KACnFnB,EAAMqB,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACNV,EAAQhB,IAAI0B,EAAM,sBAAwBA,EAAKC,OAAOC,KACtDC,EAAM7B,IAAI0B,EAAM,oBAAsB,SACtCE,EAAOF,EAAKC,OAAOC,KACnBE,EAAUJ,EAAKI,QAJEC,EAKEL,EAAKM,YAAtBC,EALeF,EAKfE,KAAMC,EALSH,EAKTG,OAEd,OACE9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CACEC,IAAKR,EACLC,IAAKA,EACLb,MAAOA,EACPc,QAASA,EACTG,KAAMA,EACNC,OAAQA,EACRN,KAAMA,YAjCIS,IAAMC,WA2CfzC,YAER,IAAM0C,EAAS","file":"component---src-pages-index-js-8ae628aba53ce667ba1d.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport { rhythm } from '../utils/typography'\n\nimport Card from '../components/Card'\nimport { card__container } from '../styles/card.module.css'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\n    const siteDescription = get(\n      this,\n      'props.data.site.siteMetadata.description'\n    )\n    const posts = get(this, 'props.data.allMarkdownRemark.edges')\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet\n          htmlAttributes={{ lang: 'en' }}\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={siteTitle}\n        />\n        <Bio />\n        <div className={card__container} style={{marginTop: rhythm(3), marginBottom: rhythm(1)}}>\n        {posts.map(({ node }) => {\n          const title = get(node, 'frontmatter.title') || node.fields.slug\n          const tag = get(node, 'frontmatter.tag') || 'no_tag'\n          const slug = node.fields.slug\n          const excerpt = node.excerpt\n          const { date, author } = node.frontmatter\n\n          return (\n            <Card\n              key={slug}\n              tag={tag}\n              title={title}\n              excerpt={excerpt}\n              date={date}\n              author={author}\n              slug={slug}\n             />\n          )\n        })}\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(limit: 8, sort: { fields: [frontmatter___date], order: DESC }, filter: {frontmatter: {tag: {ne: null}}}) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n            tag\n            author\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}