{"componentChunkName":"component---src-templates-blog-post-js","path":"/A-bit-of-reduce/","result":{"data":{"site":{"siteMetadata":{"title":"Hersen","author":"Hassan Salami"}},"markdownRemark":{"id":"ca6592f3-85bd-5936-8272-2e0b6dd410f1","excerpt":"As part of the many magics of JavaScript’s functional programming, reduce comes with its own beautiful wand yet requires a good grasp of how…","html":"<p>As part of the many magics of JavaScript’s functional programming, reduce comes with its own beautiful wand yet requires a good grasp of how it works.</p>\n<p>JavaScript’s reduce method executes a provided reducer function on each member of a given array resulting in a single output - <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\">MDN</a></p>\n<h3>Basic function</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//Consider an array on numbers as</span>\n<span class=\"token keyword\">const</span> arrayList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//Throw the array into reduce for a single sum total, passing in an accumulator, </span>\n<span class=\"token comment\">// a current value, and an initial value [optional]</span>\n\n<span class=\"token keyword\">const</span> arrayReducer <span class=\"token operator\">=</span> arrayList<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">accumulator<span class=\"token punctuation\">,</span> cuurentValue</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> accumulator <span class=\"token operator\">+</span> cuurentValue<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//outputs 41</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arrayReducer<span class=\"token punctuation\">)</span></code></pre></div>\n<h3>So what just happened?</h3>\n<p>reduce() takes a callback function and an optional initialValue (in this case, 0)</p>\n<h3>What’s an accumulator?</h3>\n<p>Given the array <code class=\"language-text\">[2, 4, 5, 6, 7, 8, 9]</code> supplied to reduce with initialValue 0 appended to its’ tail, reduce performs summation as such:</p>\n<p>from left to right:\na. initialValue / old acucmulator\nb. arrayList item value\nc. new accumulator</p>\n<p>Such that <code class=\"language-text\">a + b = c</code>. then <code class=\"language-text\">c</code> becomes the new <code class=\"language-text\">a</code> repeatedly.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token number\">0</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n<span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">=</span> <span class=\"token number\">6</span>\n<span class=\"token number\">6</span> <span class=\"token operator\">+</span> <span class=\"token number\">5</span> <span class=\"token operator\">=</span> <span class=\"token number\">11</span>\n<span class=\"token number\">11</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">17</span>\n<span class=\"token number\">17</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token number\">24</span>\n<span class=\"token number\">24</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">=</span> <span class=\"token number\">32</span>\n<span class=\"token number\">32</span> <span class=\"token operator\">+</span> <span class=\"token number\">9</span> <span class=\"token operator\">=</span> <span class=\"token number\">41</span></code></pre></div>\n<h3>What if the supplied initialValue > 0?</h3>\n<p>Say we supplied an initialValue of <code class=\"language-text\">10</code>, no worries. reduce just use that as the starting <code class=\"language-text\">a</code> in our case. Which will increase our <code class=\"language-text\">b</code> and <code class=\"language-text\">c</code> by <code class=\"language-text\">10</code>. Therefore, our sum will also be increased by <code class=\"language-text\">10</code> in our case maing <code class=\"language-text\">51</code>.</p>\n<p>Thanks guys!</p>\n<p>Best</p>","frontmatter":{"title":"A mini look into Array.reduce()","date":"December 16, 2018"}}},"pageContext":{"slug":"/A-bit-of-reduce/","previous":{"fields":{"slug":"/how-to-Gatsby/"},"frontmatter":{"title":"Hey there Gatsby!"}},"next":{"fields":{"slug":"/Array-day/"},"frontmatter":{"title":"Array Day!"}}}},"staticQueryHashes":[]}